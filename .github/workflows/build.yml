name: Build & publish

on: push

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install udev-dev
        run: sudo apt update && sudo apt install libudev-dev
        if: runner.os == 'Linux'

      - name: Set up yarn network timeout
        run: yarn config set network-timeout 1000000 -g

      - name: Build Chrysalis
        uses: samuelmeuli/action-electron-builder@v1
        env:
          YARN_GPG: no
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # We supply a build script name, so that we compile the source before
          # trying to package them up. Without compiling them, we won't have the
          # files to pack up.
          build_script_name: "compile"

          # In this step, we only want to build Chrysalis, and never release. If
          # we need to release, we do that in a separate step.
          args: -p=never
          release: false

      - name: Publish a snapshot
        uses: samuelmeuli/action-electron-builder@v1
        if: github.ref == 'refs/heads/master'
        env:
          # When releaseing a snapshot, we're going to overwrite the existing
          # one, which is set as a pre-release. Set the environment up
          # accordingly.
          EP_PRE_RELEASE: true
          # When releasing a snapshot, we want to overwrite the artifacts, no
          # matter how old the original snapshot release is.
          EP_GH_IGNORE_TIME: true
          YARN_GPG: no
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # We always want to publish artifacts if we get here.
          release: true

      - name: Publish a production release
        uses: samuelmeuli/action-electron-builder@v1
        if: startsWith(github.ref, 'refs/tags/v') && !endsWith(github.ref, '-snapshot')
        env:
          YARN_GPG: no
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # We always want to publish artifacts if we get here.
          release: true
