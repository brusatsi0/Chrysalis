name: Snapshot build & publish

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install udev-dev
        run: sudo apt update && sudo apt install libudev-dev
        if: runner.os == 'Linux'

      - name: Set up yarn network timeout
        run: yarn config set network-timeout 1000000 -g

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn dependencies
        env:
          YARN_GPG: no
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: yarn

      - name: Build Chrysalis
        uses: samuelmeuli/action-electron-builder@v1
        env:
          YARN_GPG: no
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # We supply a build script name, so that we compile the source before
          # trying to package them up. Without compiling them, we won't have the
          # files to pack up.
          build_script_name: build:${{ runner.os }}

          # In this step, we only want to build Chrysalis, and never release. If
          # we need to release, we do that in a separate step.
          args: -p=never
          release: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-artifact
          path: |
            dist/Chrysalis-*
            !dist/*.blockmap

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Delete the snapshot release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Recreate the snapshot release
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: gh release create -p -t "Chrysalis development snapshot" -n "Development snapshot." snapshot

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish a snapshot
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: gh release upload snapshot artifacts/*/Chrysalis-*
